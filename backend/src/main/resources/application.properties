# MongoDB Configuration (Use Environment Variables for Security)
spring.data.mongodb.uri=${MONGODB_URI}

# Server Configuration
server.port=${PORT:8080}  # Use the PORT environment variable set by IBM Cloud

# Enable Actuator Metrics and Health Checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true  # Enable Prometheus Monitoring

# Logging Configuration (Enable Debugging in Development)
logging.level.org.springframework=INFO
logging.level.com.example.ecommerce=DEBUG

# Spring Mail Configuration (Use Environment Variables for Security)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT Security Settings
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000  # Token valid for 24 hours

# CORS Configuration (Allow Frontend API Requests)
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
spring.web.cors.allowed-headers=Authorization,Content-Type

# API Rate Limiting (Prevention Against Abuse)
rate.limit.enabled=true
rate.limit.requests=100
rate.limit.period=60  # 100 requests per minute

# Caching Settings
spring.cache.type=simple
spring.cache.cache-names=products,wishlist
spring.cache.ttl=3600  # Cache TTL (1 hour)

# Production Mode Flag
spring.profiles.active=${SPRING_PROFILES_ACTIVE:production}
